import java.util.Arrays;
import java.util.List;

public class PseudoRandom {
  private double seed;
  private double a;
  private double c;
  private double m;

  private List<Double> randomNumbers;
  private int currentIndex;

  public PseudoRandom(double seed, double a, double c, double m) {
    this.seed = seed;
    this.a = a;
    this.c = c;
    this.m = m;

    randomNumbers = Arrays.asList(0.6314864915329963,
        0.2883869335055351,
        0.4965612736996263,
        0.8901728433556855,
        0.18815459520556033,
        0.26365250814706087,
        0.4271914593409747,
        0.09992750873789191,
        0.0725499123800546,
        0.37897238321602345,
        0.24224062426947057,
        0.8111801133491099,
        0.8142403999809176,
        0.737846209667623,
        0.6982149730902165,
        0.5141509654931724,
        0.37190549564547837,
        0.23120726272463799,
        0.5050547008868307,
        0.4120616246946156,
        0.1119127778802067,
        0.8526690239086747,
        0.14308955962769687,
        0.38530726497992873,
        0.8113086887169629,
        0.8311545755714178,
        0.8059709870722145,
        0.09332435065880418,
        0.950848318869248,
        0.034033807925879955,
        0.36020579817704856,
        0.7922786246053874,
        0.8136892553884536,
        0.343893438577652,
        0.4619164390023798,
        0.6966984090395272,
        0.15537449182011187,
        0.9620648445561528,
        0.2214528031181544,
        0.9631782188080251,
        0.4607294008601457,
        0.8420347068458796,
        0.05648061051033437,
        0.6242776871658862,
        0.05329776951111853,
        0.7058634674176574,
        0.6241713489871472,
        0.05074080405756831,
        0.5729418967384845,
        0.3467365987598896,
        0.9731187780853361,
        0.7701604668982327,
        0.5872317536268383,
        0.17077368590980768,
        0.3056069954764098,
        0.7202133438549936,
        0.35224820603616536,
        0.18122032098472118,
        0.9908550658728927,
        0.26459004962816834,
        0.9884252997580916,
        0.8581478102132678,
        0.719863212434575,
        0.5497456337325275,
        0.5870566081721336,
        0.6367856934666634,
        0.9424855706747621,
        0.030595381278544664,
        0.013090642401948571,
        0.9376120762899518,
        0.9773545048665255,
        0.2432809262536466,
        0.41984032397158444,
        0.9513267744332552,
        0.4352814869489521,
        0.15313167730346322,
        0.7412315199617296,
        0.6318322708830237,
        0.8467595379333943,
        0.6559465560130775,
        0.6772156406659633,
        0.6003474853932858,
        0.6341922318097204,
        0.060721047688275576,
        0.9379712997470051,
        0.9137793565168977,
        0.8194742619525641,
        0.6319445646367967,
        0.7625200368929654,
        0.9004772361367941,
        0.1075485700275749,
        0.5195931219495833,
        0.9773811029735953,
        0.5164950964972377,
        0.23656503739766777,
        0.6549423257820308,
        0.11089030769653618,
        0.9254865497350693,
        0.7352657390292734,
        0.44032567413523793);
    currentIndex = 0;
  }

  public double getNextRandom() {
    // Double res = randomNumbers.get(currentIndex);
    // currentIndex++;
    // return res;
    seed = (a * seed + c) % m;
    return (double) seed / m;
  }

  public double getFixNextRandom() {
    Double res = randomNumbers.get(currentIndex);
    currentIndex++;
    return res;
  }

  public boolean hasNext() {
    return currentIndex < randomNumbers.size();
  }
}
